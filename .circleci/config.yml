# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  python: circleci/python@1.5.0
  codecov: codecov/codecov@3.1.0
  node: circleci/node@5.0.0

jobs:
  install_and_update_dependencies:
    machine:
      image: ubuntu-2204:2023.10.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-machine-dependencies-{{ checksum "Pipfile.lock" }}
      - run: &install-pipenv pip3 install -U pipenv pip --quiet --no-input
      - python/install-packages:
          pkg-manager: pipenv
          args: --dev
      - run: pipenv run pipenv check # before save_cache so an insecure cache is never saved
      - save_cache:
          when: on_success
          paths:
            - ~/.local/share/virtualenvs/
          key: v3-machine-dependencies-{{ checksum "Pipfile.lock" }}

  run-tests:
    machine:
      image: ubuntu-2204:2023.10.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - restore_cache:
          keys:
            - v3-machine-dependencies-{{ checksum "Pipfile.lock" }}
            - v1-test_stack_cfn
      - run: *install-pipenv
      - python/install-packages:
          pkg-manager: pipenv
          args: --dev
      - node/install-packages
      - run:
          name: Check formatting (ruff format)
          command: pipenv run ruff-format-check
      - run:
          name: Ruff
          command: pipenv run ruff-check
      - run:
          name: Make CloudFormation Template for testing
          command: make cfn_template_for_tests
      - run:
          name: Run tests
          command: pipenv run pytest
      - codecov/upload:
          file: /home/circleci/project/coverage.xml
      - store_test_results:
          path: /home/circleci/project/test-results/
      - save_cache:
          when: on_success
          paths:
            - ~/repo/tests/test_stack_cfn
          key: v1-test_stack_cfn

  deploy:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      dc-environment:
        type: enum
        enum: [ development, production ]
    environment:
      DC_ENVIRONMENT: <<parameters.dc-environment>>
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo/
    - run: *install-pipenv
    - python/install-packages:
        pkg-manager: pipenv
        args: --dev
    - node/install-packages
    - run:
        name: CDK Synth
        command: pipenv run npx aws-cdk synth
    - run:
        name: CDK Deploy
        command: pipenv run npx aws-cdk deploy --require-approval=never

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - install_and_update_dependencies
      - run-tests:
          requires:
            - install_and_update_dependencies
          context: [ deployment-development-monitoring ]

      - deploy:
          name: cdk_deploy_development
          dc-environment: development
          requires:
            - run-tests
          context: [ deployment-development-monitoring ]
          filters: { branches: { only: [ main, master ] } }
      - deploy:
          name: cdk_deploy_production
          dc-environment: development
          requires:
            - run-tests
            - cdk_deploy_development
          context: [ deployment-production-monitoring ]
          filters: { branches: { only: [ main, master ] } }
